openapi: 3.0.3
info:
  title: Library
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Library

paths:
  /api/books:
    get:
      tags:
        - Ui
      operationId: findBooks
      summary: Search for Books
      responses:
        '200':
          $ref: '#/components/responses/BookListResponse'


  /api/books/{bookTechnicalId}/authors:
    put:
      tags:
       - Ui
      operationId: updateBooksAuthorList
      parameters:
        - in: path
          name: bookTechnicalId
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      requestBody:
        $ref: '#/components/requestBodies/AuthorListRequestBody'
      responses:
        200:
          description: Authors list updated correctly
          content:
            application/json:
              schema:
                type: string


  /api/book:
    post:
      tags:
        - Ui
      operationId: addBook
      requestBody:
        $ref: '#/components/requestBodies/BookRequestBody'
      responses:
        '200':
          description: Book saved successfully
          content:
            'application/json':
              schema:
                type: string

  /api/author:
    post:
      tags:
        - Ui
      operationId: addAuthor
      requestBody:
        $ref: '#/components/requestBodies/AuthorRequestBody'
      responses:
        '200':
          description: Author saved successfully
          content:
            application/json:
              schema:
                type: string

  /api/authors/{authorTechnicalId}/books:
    parameters:
      - in: path
        name: authorTechnicalId
        schema:
          type: string
    put:
      tags:
        - Ui
      operationId: updateAuthorsBookList
      requestBody:
        $ref: '#/components/requestBodies/AuthorListRequestBody'
      responses:
        '200':
          description: Author updated successfully
          content:
            application/json:
              schema:
                type: string


components:
  schemas:
    UUID:
      type: string
      format: uuid
    UUIDList:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    BookObject:
      description: Book object
      type: object
      required:
        - id
      properties:
        id:
          description: Book identifier
          type: integer
          minimum: 0
          format: int64
          example: 1
        title:
          description: Book's title
          type: string
          example: Catch 22
        authors:
          description: Book's author
          type: array
          items:
            $ref: '#/components/schemas/AuthorPostObject'
          example: Joseph Heller
    BookPostObject:
      description: Book object
      type: object
      properties:
        title:
          description: Book's title
          type: string
          example: Catch 22
        authors:
          description: Book's author
          type: array
          items:
            $ref: '#/components/schemas/AuthorPostObject'
          example: Joseph Heller
    AuthorPostObject:
      type: object
      properties:
        name:
          type: string



  responses:
    BookListResponse:
      description: List of Books
      content:
        'application/json':
          schema:
#            $ref: '#/components/schemas/Books'
            allOf:
              - type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookObject'

  requestBodies:
    BookRequestBody:
      description: Book request body
      required: true
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/BookPostObject'

    AuthorRequestBody:
      description: Author request body
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorPostObject'

    AuthorPutRequestBody:
      description: Author request body
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorPostObject'

    AuthorListRequestBody:
      description: Authors list
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UUIDList'

